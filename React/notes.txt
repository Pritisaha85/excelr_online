React:
-----------------------
Day 27:
React 
- JS library for building user interfaces
-released by FB in 2013
-is declarative,efficient and flexible js for building UI
-used to develop single-page applications
- is a component based front-end library
-- react makes it painless to create interactive UIS
-react is used to develop web applications/mobile applications/desktop applications

who uses react:
-FB 
-NETFLIX
-AIRBNB
-INSTA
-snapchat
-youtube
-spotifys
-tinder
-----------------------------

why use react:
-high performance with virtual DOM
--SINGLE PAGE applications
-easy to learn and implementation
-free and open source
-huge ecosystem of libraries(react router,reduc etc)
-it is a js library
-easy to integrate with other libraries
-fast and efficient-
-------------------------------
how to create react project 
-step 1
-- create a folder here React
2. open terminal in that folder (cmd)
3. npx create-react-app project-name
npx: node package execution is a command line tool of node.js that allows you to execute npm packages directly from command line
4. cd projecct_name
//to change directory
5. npm start (to run project)
step 2 : second way 

1. open terminal ?(cmd)
3.npm create vite@latest
project_name: 
choose library
react
choose variant
javascript

5. cd project_name
6. npm install(installing dependencies/node packages)
(npm-node package manager)
5. npm run dev
//1:14 minutes 
------------------
JSX-javascript XML(extension of js)
(xml-extensible markup language)
-we can write html in js
 =================
 components:
 ex:header component,footer,sidebar component etc
 1. create jsx file in source(src)
 2. declare component(function)
 3. return jsx code(wrap jsx code with fragment tag <> ...</>)
 4.  return jsx code(encapsulate/wrap jsx code)

 -wrap can be done
 = using div tag
 = using fragment tag <></>
 = using template string ``
 = using react.fragment <React.Fragment></React.Fragment>
 =EXPORT THE COMPONENT 
 =USE COMPONENT IN REMAINING JSX FILE 
 4. import component in MAIN.jsx file
 

====================================
component:(ui component)
ex:header component,footer component,sidebar component etc

-- it is a function/class that returns jsx code
-it is  a reusable component
- it is  afile that contains jsx code(html in js file)
-we can create component in two ways
1. function componet 
2. class component

1. function componet 
synatx;
function component_name(){
    return(
        <> //jsx code </>
        )
}

2. class component

 import React from "react"
class component_name extends React.component{
    render(){
        return(
            <>
            //jsx code</>
        )
    }
}
-------------------------------
        function                    classs
            js function                 Es6 class syntax
render()    NA                          required
state        useState               this.state                          
props           props                    this.props
this key        NA                       required
readabilityy    clean                   more boilerplate
preferred       modern standard         old (deprecated)
============================================

//1:37

STATE :

-state is an object that contains data that the component needs
-it is used to stor uodate/manage data that the component needs to render
-we can modify the state in the component with help os setState() method or this.setState() method

ex:
let [state/data,setState]=useState(intialState)
eg:
1. let[count,setCount]=useState(0)
2. let[name,setName]=useState('') 
3.let [user,setUser]=userState({})
4. let[fruits,setFruits]=useState([])
5. let[isTrue.setIsTrue]=useState(true)



setState() method:
-it is used to update state of the component
--it is a function used to update

useState() hook:
-it is a hook that returns an array of two elements
--the first elemnts is the state variable
--the second elemnt is the function that updates the state variable
--it is used to manage the state of the component

hooks:
-it is a function that returns jsx code
ex:useState(), useEffect(),useRef(), useContext()
=================================

props--is an object that contains data that the component needs
-it is used to pass data from parent component to child components
-we can access the props in the component with help of props
-------------------------------

                state               props
define          used 2 update        use 2 pass/transfer(psrent 2 child)
                    mutable             immutable
managed             by itself             by parent 
access                  by itself           by child 
                        this.state/useState()    props/{name,age}
    //2:33 minute
    ===================================
    day 29:
    props drilling
    -it is a technique that is used to pass data from parent component to child component.
    eg:
    grand parent-->parent--->grnad child

    -it makes difficult to code
    -it causes code maintainability
    -to avoid props drilling we can use context api or redux 
    ====================================

// 56:45  minutes done
